{"version":3,"sources":["components/Home.js","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Home","className","navigation","name","href","current","classNames","classes","filter","Boolean","join","Navbar","as","open","Button","map","item","undefined","Panel","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qLAsBeA,EApBF,WACX,OACE,qBAAKC,UAAU,6CAAf,SACE,qBAAKA,UAAU,6BAAf,SACE,sBAAKA,UAAU,iEAAf,UACE,oBAAIA,UAAU,mIAAd,8BAGA,mBAAGA,UAAU,gEAAb,oDAGA,wBAAQA,UAAU,8EAAlB,8B,eCTJC,EAAa,CACjB,CAAEC,KAAM,OAAQC,KAAM,IAAKC,SAAS,GACpC,CAAEF,KAAM,OAAQC,KAAM,IAAKC,SAAS,GACpC,CAAEF,KAAM,SAAUC,KAAM,IAAKC,SAAS,GACtC,CAAEF,KAAM,UAAWC,KAAM,IAAKC,SAAS,IAGzC,SAASC,IAAwB,IAAD,uBAATC,EAAS,yBAATA,EAAS,gBAC9B,OAAOA,EAAQC,OAAOC,SAASC,KAAK,KAGtC,IA2EeC,EA3EA,WACb,OACE,cAAC,IAAD,CAAYC,GAAG,MAAMX,UAAU,WAA/B,SACG,gBAAGY,EAAH,EAAGA,KAAH,OACC,qCACE,qBAAKZ,UAAU,yCAAf,SACE,sBAAKA,UAAU,kDAAf,UACE,qBAAKA,UAAU,wDAAf,SAEE,eAAC,IAAWa,OAAZ,CAAmBb,UAAU,0JAA7B,UACE,sBAAMA,UAAU,UAAhB,4BACCY,EACC,cAAC,IAAD,CACEZ,UAAU,4CACV,cAAY,SAGd,cAAC,IAAD,CACEA,UAAU,2BACV,cAAY,cAKpB,sBAAKA,UAAU,8EAAf,UACE,qBAAKA,UAAU,kCAAf,SACE,oBAAIA,UAAU,2CAAd,qCAIF,qBAAKA,UAAU,0BAAf,SACE,qBAAKA,UAAU,iBAAf,SACGC,EAAWa,KAAI,SAACC,GAAD,OACd,mBAEEZ,KAAMY,EAAKZ,KACXH,UAAWK,EACT,kCACA,4EAEF,eAAcU,EAAKX,QAAU,YAASY,EAPxC,SASGD,EAAKb,MARDa,EAAKb,gBAcpB,qBAAKF,UAAU,mGAInB,cAAC,IAAWiB,MAAZ,CAAkBjB,UAAU,YAA5B,SACE,qBAAKA,UAAU,2BAAf,SACGC,EAAWa,KAAI,SAACC,GAAD,OACd,mBAEEZ,KAAMY,EAAKZ,KACXH,UAAWK,EACT,6CACA,iEAEF,eAAcU,EAAKX,QAAU,YAASY,EAPxC,SASGD,EAAKb,MARDa,EAAKb,oBCzDbgB,EATH,WACV,OACE,sBAAKlB,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCGSmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.c58174de.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Home = () => {\n  return (\n    <div className=\"bg-home w-full h-screen bg-cover bg-center\">\n      <div className=\"bg-overlay w-full h-screen\">\n        <div className=\"flex flex-col justify-center items-center text-center h-screen\">\n          <h1 className=\"text-white animate__animated animate__fadeInUp text-5xl sm:text-6xl md:text-7xl leading-tight font-oran font-bold uppercase mb-1\">\n            Dress To Impress\n          </h1>\n          <p className=\"sub-heading text-white font-noto font-thin text-xl w-1/2 mb-5\">\n            We're here to help you look your best!\n          </p>\n          <button className=\"bg-white hvr-fade font-petrona text-xl font-semibold p-3 w-1/3 rounded-full\">\n            Shop Now\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","/* This example requires Tailwind CSS v2.0+ */\nimport { Disclosure } from \"@headlessui/react\";\nimport { MenuIcon, XIcon } from \"@heroicons/react/outline\";\n\nconst navigation = [\n  { name: \"Home\", href: \"#\", current: true },\n  { name: \"Mens\", href: \"#\", current: false },\n  { name: \"Womens\", href: \"#\", current: false },\n  { name: \"Contact\", href: \"#\", current: false },\n];\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(\" \");\n}\n\nconst Navbar = () => {\n  return (\n    <Disclosure as=\"nav\" className=\"bg-white\">\n      {({ open }) => (\n        <>\n          <div className=\"max-w-7xl mx-auto px-2 sm:px-6 lg:px-8\">\n            <div className=\"relative flex items-center justify-between h-16\">\n              <div className=\"absolute inset-y-0 left-0 flex items-center sm:hidden\">\n                {/* Mobile menu button*/}\n                <Disclosure.Button className=\"inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-white focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white\">\n                  <span className=\"sr-only\">Open main menu</span>\n                  {open ? (\n                    <XIcon\n                      className=\"block h-6 w-6 text-black hover:text-black\"\n                      aria-hidden=\"true\"\n                    />\n                  ) : (\n                    <MenuIcon\n                      className=\"block h-6 w-6 text-black\"\n                      aria-hidden=\"true\"\n                    />\n                  )}\n                </Disclosure.Button>\n              </div>\n              <div className=\"flex-1 flex items-center justify-center sm:items-stretch sm:justify-between\">\n                <div className=\"flex-shrink-0 flex items-center\">\n                  <h2 className=\"text-black font-prata text-lg sm:text-xl\">\n                    Hawthorne Apparel Co.\n                  </h2>\n                </div>\n                <div className=\"hidden sm:block sm:ml-6\">\n                  <div className=\"flex space-x-4\">\n                    {navigation.map((item) => (\n                      <a\n                        key={item.name}\n                        href={item.href}\n                        className={classNames(\n                          \"text-black text-lg font-petrona\",\n                          \"px-3 py-2 rounded-md text-sm font-medium hover:bg-black hover:text-white\"\n                        )}\n                        aria-current={item.current ? \"page\" : undefined}\n                      >\n                        {item.name}\n                      </a>\n                    ))}\n                  </div>\n                </div>\n              </div>\n              <div className=\"absolute inset-y-0 right-0 flex items-center pr-2 sm:static sm:inset-auto sm:ml-6 sm:pr-0\"></div>\n            </div>\n          </div>\n\n          <Disclosure.Panel className=\"sm:hidden\">\n            <div className=\"px-2 pt-2 pb-3 space-y-1\">\n              {navigation.map((item) => (\n                <a\n                  key={item.name}\n                  href={item.href}\n                  className={classNames(\n                    \"text-black hover:bg-black hover:text-white\",\n                    \"block px-3 py-2 rounded-md font-petrona text-base font-medium\"\n                  )}\n                  aria-current={item.current ? \"page\" : undefined}\n                >\n                  {item.name}\n                </a>\n              ))}\n            </div>\n          </Disclosure.Panel>\n        </>\n      )}\n    </Disclosure>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport \"./App.css\";\nimport Home from \"./components/Home\";\nimport Navbar from \"./components/Navbar\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <Home />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}